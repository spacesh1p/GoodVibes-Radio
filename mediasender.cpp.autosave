#include <QStringList>
#include <QFile>
#include <QtAlgorithms>
#include <QSet>
#include <QMediaPlayer>
#include <QTcpSocket>
#include "mediasender.h"

MediaSender::MediaSender(QTcpSocket* socket)
    : pSocket(socket)
{
    pMediaPlayer = new QMediaPlayer;
    connect(pMediaPlayer, SIGNAL(mediaStatusChanged(QMediaPlayer::MediaStatus)),
            this, SLOT(slotMediaStatusChanged(QMediaPlayer::MediaStatus)));
    connect(this, SIGNAL(songAdded(int)),
            this, SLOT(slotSongAdded(int)));
}

QString MediaSender::addSong(const QString& path) {
    playList.insert(path);
    QString songName;
    bool write = false;
    for (int i = path.length() - 2; i != 0; i--) {              // method of getting song name until I can't get meta-data
        if (path[i] == '.') {
            write = true;
            continue;
        }
        if (path[i] == '/')
            break;
        if (write)
            songName.push_back(path[i]);
    }
    for (int i = 0; i < songName.length() / 2; i++) {
        QChar c = songName[i];
        songName[i] = songName[songName.length() - 1 - i];
        songName[songName.length() - 1 - i] = c;
    }
    emit songAdded(playList.size());
    return songName;
}

void MediaSender::setVolume(int val) {
    //set volume
}

void MediaSender::sendToServer(QFile *pFile) {         // send audio to client
    if (!pFile->open(QFile::ReadOnly))                                              // open audio file
        {
            ui->textView->append("Can't open file.");
            return;
        }

        QByteArray arrBlock;
        QDataStream out(&arrBlock, QIODevice::WriteOnly);
        out.setVersion(QDataStream::Qt_5_3);
        out << quint64(0) << "song/" << pFile->readAll() << "/end" ;             // convert audio into bytes and write
        out.device()->seek(0);
        out << quint64(arrBlock.size() - sizeof(quint64));
        pClientSocket->write(arrBlock);
        pClientSocket->flush();
}

void MediaSender::slotSongAdded(int number) {
    if (number <= 3) {
        pFile = new QFile(*(playList.begin() + (number - 1)));
        if (number == 1)
            pMediaPlayer->setMedia(QUrl::fromLocalFile(*(playList.begin())));
    }
    else {
        disconnect(this, SIGNAL(songAdded(int)),
                   this, SLOT(slotSongAdded(int)));
        connect(pMediaPlayer, SIGNAL(mediaStatusChanged(QMediaPlayer::MediaStatus)),
                this, SLOT(slotSendNextSong(QMediaPlayer::MediaStatus)));
    }
}

void MediaSender::slotMediaStatusChanged(QMediaPlayer::MediaStatus status) {
    if (status == QMediaPlayer::MediaStatus::LoadedMedia)
        pMediaPlayer->play();
    if (status == QMediaPlayer::MediaStatus::EndOfMedia)
        pMediaPlayer->setMedia(QUrl::fromLocalFile())
}
